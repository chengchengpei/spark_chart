apiVersion: v1
kind: Service
metadata:
  name: {{ template "master-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
spec:
  ports:
    - name: {{.Values.Master.ServicePortName}}
      port: {{.Values.Master.ServicePort}}
      targetPort: {{.Values.Master.ServiceContainerPort}}
    - name: {{.Values.Master.RestPortName}}
      port: {{.Values.Master.RestPort}}
      targetPort: {{.Values.Master.RestContainerPort}}
  selector:
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "webui-fullname" . }} 
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
  annotations:
    kubernetes.io/ingress.class: {{.Values.WebUi.IngressClass | quote}}
spec:
  rules:
    - host: {{ template "master-fullname" . }}.{{.Values.WebUi.Domain}}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ template "webui-fullname" . }} 
              servicePort: {{.Values.WebUi.ServicePort}} 
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "webui-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
spec:
  ports:
    - port: {{.Values.WebUi.ServicePort}}
      targetPort: {{.Values.WebUi.ContainerPort}}
  selector:
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "master-fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Master.Component}}"
spec:
  replicas: {{default 1 .Values.Master.Replicas}}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{.Release.Name}}-{{.Values.Master.Component}}"
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Master.Component}}"
    spec:
      containers:
        - name: {{ template "master-fullname" . }}
          image: "{{.Values.Master.Image}}:{{.Values.Master.ImageTag}}"
          command: ["/bin/sh","-c"]
          args: ["echo $(hostname -i) {{ template "master-fullname" . }} >> /etc/hosts; /usr/spark-2.2.1/bin/spark-class org.apache.spark.deploy.master.Master --ip {{ template "master-fullname" . }} --port {{.Values.Master.ServicePort}} --webui-port {{.Values.WebUi.ContainerPort}}"]
          ports:
            - containerPort: {{.Values.Master.ServiceContainerPort}}
            - containerPort: {{.Values.Master.RestContainerPort}}
            - containerPort: {{.Values.WebUi.ContainerPort}}
          resources:
            requests:
              cpu: "{{.Values.Master.Cpu}}"
              memory: "{{.Values.Master.Memory}}"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: {{ default "1g" .Values.Master.DaemonMemory | quote }}
          volumeMounts:
            - mountPath: /usr/spark-2.2.1/conf
              name: conf
      volumes:
        - name: conf
          configMap:
            name: {{ .Release.Name }}-conf 
 
